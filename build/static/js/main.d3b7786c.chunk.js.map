{"version":3,"sources":["component/Header.js","component/MiFavorytes.js","component/Content.js","Initializers/Firebase.js","component/Login.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","MyFavorytes","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","favorites","map","item","Content","_this","state","data","stores","existe","firebase","database","ref","on","snapshot","forEach","push","val","address","correo","document","getElementById","value","alert","setState","prevState","concat","toConsumableArray","style","display","_this2","fetch","then","response","json","location","dataLocation","i","length","key","Address","Name","_this3","dist","google","zoom","initialCenter","lat","lng","onClick","onMapClicked","position","Coordinates","onMarkerClick","bind","id","showTienda","component_MiFavorytes","GoogleApiWrapper","apiKey","DB_CONFIG","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","type","placeholder","required","App","initializeApp","email","password","auth","signInWithEmailAndPassword","catch","error","console","log","createUserWithEmailAndPassword","createAccount","component_Login","loginFunction","buttonRegisterUser","href","src_component_Header","title","src_component_Content","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iOAqBiBA,gMAVX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,yCAPaE,8BCsBNC,qBAtBX,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,6EAIb,GAA8B,qBAApBA,KAAKH,MAAMO,KAAqB,CACxC,IAAIC,EAAUL,KAAKH,MAAMO,KACzB,OACEb,EAAAC,EAAAC,cAAA,UACCY,EAAUC,IAAI,SAAAC,GACb,OACAhB,EAAAC,EAAAC,cAAA,UAAKc,MAMT,OAAOhB,EAAAC,EAAAC,cAAA,sCAjBOE,+BCGpBa,sBACF,SAAAA,EAAYX,GAAM,IAAAY,EAAA,OAAAX,OAAAC,EAAA,EAAAD,CAAAE,KAAAQ,IACdC,EAAAX,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAU,GAAAL,KAAAH,KAAMH,KACCa,MAAM,CACTC,KAAK,GACLP,KAAK,IAJKK,6EAOFG,GACd,IAAIP,EAAU,GACVQ,GAAO,GACEC,IAASC,WAAWC,MACzBC,GAAG,QAAQ,SAACC,GAClBA,EAASC,QAAQ,SAASZ,GACxBF,EAAUe,KAAKb,EAAKc,MAAMjB,KAAK,IAAIG,EAAKc,MAAMC,SAC3Cf,EAAKc,MAAME,SAAWC,SAASC,eAAe,cAAcC,OAASnB,EAAKc,MAAMC,UAAWV,EAAOU,SAAWf,EAAKc,MAAMjB,OAAQQ,EAAOR,OACxIS,GAAO,OAIVA,GACDc,MAAM,8BAGMb,IAASC,WAAWC,MACxBI,KAAK,CAAChB,KAAKQ,EAAOR,KAAKmB,OAAOC,SAASC,eAAe,cAAcC,MAAMJ,QAAQV,EAAOU,UAEnGtB,KAAK4B,SAAS,SAAAC,GACZ,MAAO,CAAExB,UAAS,GAAAyB,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAM+B,EAAUzB,MAASC,2CAIzCmB,SAASC,eAAe,SAASO,MAAMC,QAAQ,oDAEhC,IAAAC,EAAAlC,KACnBmC,MAAM,0BACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,OAC1BF,KAAK,SAAAG,GAEN,IADA,IAAIC,EAAc,GACVC,EAAE,EAAGA,EAAEF,EAASG,OAAOD,IAAI,CACjC,IAAIlC,EAAKgC,EAASE,GAClBlC,EAAKoC,IAAKF,EACVlC,EAAKe,QAAQiB,EAASE,GAAGG,QACzBrC,EAAKH,KAAKmC,EAASE,GAAGI,KACxBL,EAAapB,KAAKb,GAEhB2B,EAAKN,SAAS,SAAAC,GACZ,MAAO,CAAElB,KAAI,GAAAmB,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAM+B,EAAUlB,MAAS6B,2CAMlC,IAAAM,EAAA9C,KACJ,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACsD,EAAA,IAAD,CAAKC,OAAQhD,KAAKH,MAAMmD,OACpBC,KAAM,GAENC,cAAe,CACfC,IAAI,UAAUC,KAAK,WAEnBC,QAASrD,KAAKsD,cACZtD,KAAKU,MAAMC,KAAKL,IAAI,SAAAC,GAClB,OACIhB,EAAAC,EAAAC,cAACsD,EAAA,OAAD,CAAQQ,SAAU,CAACJ,IAAI5C,EAAKiD,YAAYL,IAAIC,IAAI7C,EAAKiD,YAAYJ,KAAMC,QAASP,EAAKW,cAAcC,KAAKZ,GACxG1C,KAAMG,EAAKH,KAAMkB,QAASf,EAAKe,cAM7C/B,EAAAC,EAAAC,cAAA,UAAQkE,GAAG,UAAUN,QAASrD,KAAK4D,WAAWF,QAA9C,eACAnE,EAAAC,EAAAC,cAAA,OAAKkE,GAAG,QAAQjE,UAAU,QAAQsC,MAAO,CAACC,QAAS,SACnD1C,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACoE,EAAD,CAAazD,KAAMJ,KAAKU,MAAML,qBA5E1BV,cAuFPmE,6BAAiB,CAC5BC,OAAS,2CADED,CAEVtD,GC9FQwD,EAAY,CACrBD,OAAQ,0CACRE,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,gBCmBRC,2LAvBP,OACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUiE,GAAG,aAAa3B,MAAO,CAACC,QAAS,UACtD1C,EAAAC,EAAAC,cAAA,+BACIF,EAAAC,EAAAC,cAAA,SAAO8E,KAAK,OAAOZ,GAAG,aAAaa,YAAY,UAAUC,UAAQ,IACjElF,EAAAC,EAAAC,cAAA,SAAO8E,KAAK,WAAWZ,GAAG,gBAAgBa,YAAY,gBAAaC,UAAQ,KAEnFlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUiE,GAAG,gBAAgB3B,MAAO,CAACC,QAAS,SAEzD1C,EAAAC,EAAAC,cAAA,4BACIF,EAAAC,EAAAC,cAAA,SAAO8E,KAAK,QAAQC,YAAY,wBAAqBb,GAAG,gBAAgBc,UAAQ,IAChFlF,EAAAC,EAAAC,cAAA,SAAO8E,KAAK,WAAWC,YAAY,gBAAab,GAAG,mBAAmBc,UAAQ,IAC9ElF,EAAAC,EAAAC,cAAA,SAAO8E,KAAK,WAAWC,YAAY,cAAWC,UAAQ,aAhBtD9E,cCoFL+E,cA7Eb,SAAAA,EAAY7E,GAAM,IAAAY,EAAA,OAAAX,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,GAChBjE,EAAAX,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMH,IACNiB,IAAS6D,cAAcX,GAFPvD,+EAOhB,IAAImE,EAAMpD,SAASC,eAAe,cAAcC,MAC5CmD,EAASrD,SAASC,eAAe,iBAAiBC,MACtDZ,IAASgE,OAAOC,2BAA2BH,EAAOC,GAAUzC,KAAK,WAC/DZ,SAASC,eAAe,QAAQO,MAAMC,QAAQ,QAC9CT,SAASC,eAAe,SAASO,MAAMC,QAAQ,SAIhD+C,MAAM,SAASC,GACZC,QAAQC,IAAIF,GACZtD,MAAM,+EAMVH,SAASC,eAAe,cAAcO,MAAMC,QAAQ,OACpDT,SAASC,eAAe,iBAAiBO,MAAMC,QAAQ,QACvDT,SAASC,eAAe,eAAeO,MAAMC,QAAQ,OACrDT,SAASC,eAAe,gBAAgBO,MAAMC,QAAQ,qDAKtD,IAAI2C,EAAMpD,SAASC,eAAe,iBAAiBC,MAC/CmD,EAASrD,SAASC,eAAe,oBAAoBC,MACzDZ,IAASgE,OAAOM,+BAA+BR,EAAOC,GACrDzC,KAAK,WACJT,MAAM,gCACNH,SAASC,eAAe,cAAcO,MAAMC,QAAQ,QACpDT,SAASC,eAAe,iBAAiBO,MAAMC,QAAQ,SAExD+C,MAAM,SAASC,MAIhBzD,SAASC,eAAe,cAAcO,MAAMC,QAAQ,QACpDT,SAASC,eAAe,iBAAiBO,MAAMC,QAAQ,OACvDT,SAASC,eAAe,eAAeO,MAAMC,QAAQ,QACrDT,SAASC,eAAe,gBAAgBO,MAAMC,QAAQ,wCAGtD,OACE1C,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBiE,GAAG,SACnCpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,QAAMkE,GAAG,gBAAgBN,QAASrD,KAAKqF,eAAvC,iBAED9F,EAAAC,EAAAC,cAAC6F,EAAD,MACA/F,EAAAC,EAAAC,cAAA,SAAO8E,KAAK,SAASZ,GAAG,cAAcjC,MAAM,oBAAiB2B,QAASrD,KAAKuF,gBAC3EhG,EAAAC,EAAAC,cAAA,SAAO8E,KAAK,SAAS7C,MAAM,cAAcM,MAAO,CAACC,QAAS,QAAS0B,GAAG,eAAeN,QAASrD,KAAKwF,qBACnGjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACNH,EAAAC,EAAAC,cAAA,KAAGgG,MAAI,GAAP,8BAKVlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMsC,MAAO,CAACC,QAAS,QAAS0B,GAAG,QAClDpE,EAAAC,EAAAC,cAACiG,EAAD,CAAQC,MAAM,sBACfpG,EAAAC,EAAAC,cAACmG,EAAD,eApEajG,aCIEkG,QACW,cAA7BC,OAAOvD,SAASwD,UAEe,UAA7BD,OAAOvD,SAASwD,UAEhBD,OAAOvD,SAASwD,SAASC,MACvB,2DCZNC,IAASC,OAAO3G,EAAAC,EAAAC,cAAC0G,EAAD,MAAS3E,SAASC,eAAe,SD2H3C,kBAAmB2E,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC","file":"static/js/main.d3b7786c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.css'\n\n\n\nclass Header extends Component {\n    static propTypes ={\n      title: PropTypes.string.isRequired\n    };\n    render() {\n      return (\n        <div className=\"Header\">\n        <h1>Ciudad de México</h1>\n  \n        </div>\n      );\n    }\n  }\n  \n\n  export default Header;\n\n","import React, { Component } from 'react';\nimport './MiFavorytes.css';\n\n\n\nclass MyFavorytes extends Component {\n    constructor(props){\n      super();\n    }\n        render() {\n          if(typeof this.props.name !== \"undefined\"){\n            let favorites=this.props.name;\n            return(\n              <ul>\n              {favorites.map(item=>{\n                return(\n                <li>{item}</li>\n                )\n              })}\n              </ul>\n            )\n          }else{\n            return(<p>Sin Información</p>)\n          }\n          \n        }\n      }\n\nexport default MyFavorytes;\n\n/*if {(this.state.name !=null) \n  return(\n    <h3 className=\"divh\">Mis tiendas favoritas</h3>\n    {this.props.name.map(item=>{\n     return(\n      <p className=\"stores\" position={{lat:item.Coordinates.lat,lng:item.Coordinates.lng}} \n     name={item.name} title={item.address}> X</p>\n                  )}\n          )}\n  )}\n      */\n        ","import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport MiFavorytes from './MiFavorytes';\nimport firebase from 'firebase';\nimport './Content.css'\n\n\n\nclass Content extends Component{\n    constructor(props){\n        super(props);\n          this.state={\n            data:[],\n            name:[]\n           }   \n      }\n      onMarkerClick(stores) {\n      let favorites=[];\n      let existe=false;\n      let refLike= firebase.database().ref();\n      refLike.on('value',(snapshot)=>{\n        snapshot.forEach(function(item){\n          favorites.push(item.val().name+\",\"+item.val().address);\n          if(item.val().correo === document.getElementById('usersLogin').value && item.val().address=== stores.address && item.val().name=== stores.name){\n            existe=true;\n          }\n        })\n      });\n      if(existe){\n        alert(\"La tienda ya esta agregada\");\n      }\n      else{\n        let refName=firebase.database().ref();\n        refName.push({name:stores.name,correo:document.getElementById('usersLogin').value,address:stores.address})\n      }\n      this.setState(prevState => {\n        return { favorites: [...prevState.name, ...favorites]}\n      });\n      }\n      showTienda(){\n          document.getElementById(\"lista\").style.display=\"block\";\n      }\n      componentDidMount(){\n      fetch('./store_directory.json')\n      .then(response => response.json()\n      .then(location =>{\n      let dataLocation =[];\n      for(let i=0; i<location.length;i++){\n        let item=location[i];\n        item.key= i;\n        item.address=location[i].Address; \n        item.name=location[i].Name;\n      dataLocation.push(item);\n      }\n        this.setState(prevState => {\n          return { data: [...prevState.data, ...dataLocation]}\n        });\n      }))\n\n      }\n  \n      render(){\n          return(\n              <div>\n                  <div className=\"mapa\">\n                    <Map google={this.props.google}\n                        zoom={13}\n                         //styles={style}\n                        initialCenter={{\n                        lat:19.419444,lng:-99.145556\n                        }}\n                        onClick={this.onMapClicked}>\n                         {this.state.data.map(item=>{\n                            return(\n                                <Marker position={{lat:item.Coordinates.lat,lng:item.Coordinates.lng}} onClick={this.onMarkerClick.bind(this)}\n                                name={item.name} address={item.address} />\n                                )}\n                        )}\n                    </Map>\n                   \n                  </div>\n                  <button id=\"tiendas\" onClick={this.showTienda.bind()}>Ver Tiendas</button>\n                  <div id=\"lista\" className=\"lista\" style={{display: 'none'}}>\n                  <p> Mis Tiendas Favoritas</p>\n                  <MiFavorytes name={this.state.favorites}/>\n                  </div>\n              </div>\n    ) \n    }\n};\n\n\n// \n\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyCVH8e45o3d-5qmykzdhGKd1-3xYua5D2A\")\n  })(Content)\n\n"," // Initialize Firebase\n\n\nexport const DB_CONFIG = {\n    apiKey: \"AIzaSyDYyQy8YEUepOHUbr_HBEF3aUDd-uziugo\",\n    authDomain: \"storesfavorytes.firebaseapp.com\",\n    databaseURL: \"https://storesfavorytes.firebaseio.com\",\n    projectId: \"storesfavorytes\",\n    storageBucket: \"storesfavorytes.appspot.com\",\n    messagingSenderId: \"393673143639\"\n  };\n\n\n\n\n","import React, { Component } from 'react';\nimport './styleLogin.css';\nclass Login extends Component {\n \n    render(){\n        return(\n          <div className=\"divLogin\">\n           \n            <div className=\"divForm\" id=\"sesionInit\" style={{display: 'block'}}>\n                <h2>Iniciar Sesión</h2>\n                    <input type=\"text\" id=\"usersLogin\" placeholder=\"Usuario\" required />\n                    <input type=\"password\" id=\"passwordLogin\" placeholder=\"Contraseña\" required />        \n                </div>\n            <div className=\"divForm\" id=\"createAccount\" style={{display: 'none'}}>\n               \n                <h2>Crea tu Cuenta</h2>\n                    <input type=\"email\" placeholder=\"Correo Electrónico\" id=\"emailRegister\" required />    \n                    <input type=\"password\" placeholder=\"Contraseña\" id=\"passwordRegister\" required />\n                    <input type=\"password\" placeholder=\"Teléfono\" required />\n                   \n\n            </div>\n            </div>\n        )\n\n    }\n    \n}\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './component/Header.js';\nimport Content from './component/Content.js';\nimport firebase from 'firebase';\nimport {DB_CONFIG} from './Initializers/Firebase';\nimport Login from './component/Login'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    firebase.initializeApp(DB_CONFIG);\n    \n  }\n\n  loginFunction(){\n    let email=document.getElementById(\"usersLogin\").value;\n    let password=document.getElementById(\"passwordLogin\").value;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function(){\n      document.getElementById(\"home\").style.display=\"block\";\n      document.getElementById(\"login\").style.display=\"none\";\n\n      \n    })\n    .catch(function(error) {\n        console.log(error)\n        alert(\"Usuario o Contraseña no Existe\");\n        // ...\n      });\n  }\n\n  createAccount(){\n    document.getElementById(\"sesionInit\").style.display=\"none\";\n    document.getElementById(\"createAccount\").style.display=\"block\";\n    document.getElementById(\"buttonLogin\").style.display=\"none\";\n    document.getElementById(\"registerUser\").style.display=\"block\";\n    \n  }\n  buttonRegisterUser(){\n    //reguistra un usuario\n    let email=document.getElementById(\"emailRegister\").value;\n    let password=document.getElementById(\"passwordRegister\").value;\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n    .then(function(){\n      alert(\"Usuario creado correctamente\");\n      document.getElementById(\"sesionInit\").style.display=\"block\";\n      document.getElementById(\"createAccount\").style.display=\"none\";\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      // ...\n    });\n    document.getElementById(\"sesionInit\").style.display=\"block\";\n    document.getElementById(\"createAccount\").style.display=\"none\";\n    document.getElementById(\"buttonLogin\").style.display=\"block\";\n    document.getElementById(\"registerUser\").style.display=\"none\";\n  }\n  render(){\n    return(\n      <div>\n         <div>\n      <div className=\"container-form\" id=\"login\">\n      <div className=\"toggle\">\n        <span id=\"buttonAccount\" onClick={this.createAccount}>Crear Cuenta</span>\n            </div>\n       <Login/>\n       <input type=\"button\" id=\"buttonLogin\" value=\"Iniciar sesión\" onClick={this.loginFunction}/>\n       <input type=\"button\" value=\"Registrarse\" style={{display: 'none'}} id=\"registerUser\" onClick={this.buttonRegisterUser}/>\n       <div className=\"reset-password\">\n                <a href>Olvide mi Contraseña</a>\n        \n            </div>\n       </div>\n      </div>\n      <div className=\"App\" style={{display: 'none'}} id=\"home\">\n      <Header title=\"Tiendas Favoritas\"/>\n     <Content/>\n      </div>\n      </div>\n    )\n   \n  }\n\n}\n    \n   \nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}